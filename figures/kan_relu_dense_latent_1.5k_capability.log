sae.py:332 self.cfg.activation_fn_kwargs={'kan_hidden_size': 16384, 'kan_ae_type': 'kan_relu_dense'}
line 1181: hidden_size set to bottleneck_size: 16384
Loaded pretrained model meta-llama/Llama-3.2-1B into HookedTransformer
Tokenized prompt: ['<|begin_of_text|>', 'If', ' the', ' glass', ' falls', ' off', ' the', ' table', ',', ' it', ' will']
Tokenized answer: [' break']
Performance on answer token:
Rank: 2        Logit: 20.85 Prob: 12.82% Token: | break|
Top 0th token. Logit: 20.90 Prob: 13.47% Token: | be|
Top 1th token. Logit: 20.87 Prob: 13.05% Token: | not|
Top 2th token. Logit: 20.85 Prob: 12.82% Token: | break|
Top 3th token. Logit: 20.04 Prob:  5.69% Token: | fall|
Top 4th token. Logit: 19.89 Prob:  4.89% Token: | hit|
Top 5th token. Logit: 18.78 Prob:  1.61% Token: | sh|
Top 6th token. Logit: 18.72 Prob:  1.52% Token: | cause|
Top 7th token. Logit: 18.59 Prob:  1.34% Token: | make|
Top 8th token. Logit: 18.59 Prob:  1.33% Token: | have|
Top 9th token. Logit: 18.52 Prob:  1.25% Token: | probably|
Ranks of the answer tokens: [(' break', 2)]
Tokenized prompt: ['<|begin_of_text|>', 'If', ' the', ' glass', ' falls', ' off', ' the', ' table', ',', ' it', ' will']
Tokenized answer: [' break']
Padded sae_out from torch.Size([1, 10, 2048]) to torch.Size([1, 12, 2048])
Performance on answer token:
Rank: 6        Logit: 17.83 Prob:  2.13% Token: | break|
Top 0th token. Logit: 19.47 Prob: 11.03% Token: | be|
Top 1th token. Logit: 19.26 Prob:  8.96% Token: | not|
Top 2th token. Logit: 18.34 Prob:  3.58% Token: |.|
Top 3th token. Logit: 18.29 Prob:  3.37% Token: | fall|
Top 4th token. Logit: 18.24 Prob:  3.21% Token: | go|
Top 5th token. Logit: 18.00 Prob:  2.53% Token: |,|
Top 6th token. Logit: 17.83 Prob:  2.13% Token: | break|
Top 7th token. Logit: 17.83 Prob:  2.13% Token: |
|
Top 8th token. Logit: 17.61 Prob:  1.72% Token: | stay|
Top 9th token. Logit: 17.46 Prob:  1.48% Token: | come|
Ranks of the answer tokens: [(' break', 6)]
